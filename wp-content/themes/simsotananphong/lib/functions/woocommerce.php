<?php
/**
 * N Framework
 *
 * WARNING: This file is part of the core N Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @since      0.0.1
 * @package    N
 * @subpackage N/lib/functions
 */

if (!defined('ABSPATH')):
	exit; // Exit if accessed directly.
endif;

/**
 * Change number of products that are displayed per page (shop page)
 */
add_filter('loop_shop_per_page', '_n_loop_shop_per_page', 20);

function _n_loop_shop_per_page($cols){
	return 51;
}

/**
 * Tạo sản phẩm woocommerce
 *
 * @since 0.0.1
 */
function _n_create_product($args){
	$phone      = $args['phone'];
	$post_metas = [];

	$content = '';
	if (isset($args['content'])):
		$content = $args['content'];
	endif;

	$post_data = [
		'post_title'   => $args['title'],
		'post_content' => $content,
		'post_status'  => 'publish',
		'post_type'    => 'product',
	];

	// Loại sản phẩm
	$post_metas['_type'] = $args['type'];

	// Thuộc tính sản phẩm
	$post_metas['_price']         = $args['price'];
	$post_metas['_regular_price'] = $args['price'];

	// Giá gốc
	if ($args['cost'] != ''):
		$post_metas['_cost'] = $args['cost'];
	endif;

	if ($args['type'] == 'sim'):
		// Phân loại sim
		$categories = _n_get_categories($phone);
		if (!empty($categories)):
			foreach ($categories as $category):
				$post_metas[$category] = 'yes';
			endforeach;
		endif;

		// Sim VIP
		if ($args['price'] >= 30000000):
			$post_metas['_sim_vip'] = 'yes';
		endif;

		// Loại sim
		$post_metas['_loai_sim'] = $args['loai_sim'];

		if (strpos($args['goi_cuoc'], ";") !== false):
			$goi_cuoc = explode(";", $args['goi_cuoc']);
			$goi_cuoc = array_map('trim', $goi_cuoc);
		else:
			$goi_cuoc = $args['goi_cuoc'];
		endif;

		// Gói cước
		$post_metas['_goi_cuoc'] = $goi_cuoc;

		// Số điện thoại chuẩn
		$post_metas['_phone_number'] = $phone;

		// Đầu số
		$post_metas['_dau_so'] = substr($phone, 0, 3);

		// Tổng nút
		$sum                     = array_sum(str_split(preg_replace('/[^0-9]/', '', $phone)));
		$post_metas['_tong_nut'] = substr($sum, - 1);

		// Không chứa số
		$phone_zero_less = substr($phone, 1);
		for ($i = 0; $i <= 9; $i ++):
			if (!str_contains($phone_zero_less, strval($i))):
				$post_metas['_khong_chua_so_' . $i] = 'yes';
			endif;
		endfor;

		// Bán riêng
		$post_metas['_sold_individually'] = 'yes';

		// Số lượng trong kho
		$post_metas['_stock'] = 1;

		// Dạng số
		$dang_so = _n_check_dang_so($phone);
		if (!empty($dang_so)):
			foreach ($dang_so as $key => $value):
				$post_metas[$key] = $value;
			endforeach;
		endif;
	endif;

	// Nhà cung cấp
	$post_metas['_nha_cung_cap'] = $args['nha_cung_cap'];

	// Nhà mạng
	if ($args['nha_mang'] == '' || $args['nha_mang'] == false):
		$post_metas['_nha_mang'] = _n_check_nha_mang($phone);
	else:
		$post_metas['_nha_mang'] = $args['nha_mang'];
	endif;

	// Trạng thái
	$post_metas['_trang_thai'] = 'trong_kho';

	$product_id = wp_insert_post($post_data);

	if (!is_wp_error($product_id)):
		if (!empty($post_metas)):
			foreach ($post_metas as $meta_key => $meta_value):
				update_post_meta($product_id, $meta_key, $meta_value);
			endforeach;
		endif;

		return $product_id;
	else:
		return false;
	endif;
}

/**
 * Tạo sản phẩm gói cước
 *
 * @since 0.0.1
 */
function _n_create_package($args){
	$post_metas = [];

	$content = '';
	if (isset($args['content'])):
		$content = $args['content'];
	endif;

	$post_data = [
		'post_title'   => $args['title'],
		'post_content' => $content,
		'post_status'  => 'publish',
		'post_type'    => 'product',
	];

	// Loại sản phẩm
	$post_metas['_type'] = $args['type'];

	// Thuộc tính sản phẩm
	$post_metas['_price']         = $args['price'];
	$post_metas['_regular_price'] = $args['price'];

	// Cam kết
	$post_metas['_cam_ket'] = $args['cam_ket'];

	// Tên gói cước đầy đủ
	$post_metas['_package_name'] = $args['title'];

	// Loại sim
	$post_metas['_loai_sim'] = $args['loai_sim'];

	$product_id = wp_insert_post($post_data);

	if (!is_wp_error($product_id)):
		if (!empty($post_metas)):
			foreach ($post_metas as $meta_key => $meta_value):
				update_post_meta($product_id, $meta_key, $meta_value);
			endforeach;
		endif;

		return $product_id;
	else:
		return false;
	endif;
}

/**
 * Product filter
 */
function _n_product_custom_query($query){
	$s               = isset($_GET['s']) ? esc_attr($_GET['s']) : '';
	$nha_mang        = isset($_GET['nha_mang']) ? esc_attr($_GET['nha_mang']) : '';
	$loai_sim        = isset($_GET['loai_sim']) ? esc_attr($_GET['loai_sim']) : '';
	$dau_so          = isset($_GET['dau_so']) ? esc_attr($_GET['dau_so']) : '';
	$phan_loai       = isset($_GET['phan_loai']) ? esc_attr($_GET['phan_loai']) : '';
	$gia             = isset($_GET['gia']) ? esc_attr($_GET['gia']) : '';
	$tong_nut        = isset($_GET['tong_nut']) ? esc_attr($_GET['tong_nut']) : '';
	$cam_ket         = isset($_GET['cam_ket']) ? esc_attr($_GET['cam_ket']) : '';
	$nam             = isset($_GET['nam']) ? esc_attr($_GET['nam']) : '';
	$tra_sau         = isset($_GET['_tra_sau']) ? esc_attr($_GET['_tra_sau']) : '';
	$tra_truoc       = isset($_GET['_tra_truoc']) ? esc_attr($_GET['_tra_truoc']) : '';
	$khong_chua_so_0 = isset($_GET['khong_chua_so_0']) ? esc_attr($_GET['khong_chua_so_0']) : '';
	$khong_chua_so_1 = isset($_GET['khong_chua_so_1']) ? esc_attr($_GET['khong_chua_so_1']) : '';
	$khong_chua_so_2 = isset($_GET['khong_chua_so_2']) ? esc_attr($_GET['khong_chua_so_2']) : '';
	$khong_chua_so_3 = isset($_GET['khong_chua_so_3']) ? esc_attr($_GET['khong_chua_so_3']) : '';
	$khong_chua_so_4 = isset($_GET['khong_chua_so_4']) ? esc_attr($_GET['khong_chua_so_4']) : '';
	$khong_chua_so_5 = isset($_GET['khong_chua_so_5']) ? esc_attr($_GET['khong_chua_so_5']) : '';
	$khong_chua_so_6 = isset($_GET['khong_chua_so_6']) ? esc_attr($_GET['khong_chua_so_6']) : '';
	$khong_chua_so_7 = isset($_GET['khong_chua_so_7']) ? esc_attr($_GET['khong_chua_so_7']) : '';
	$khong_chua_so_8 = isset($_GET['khong_chua_so_8']) ? esc_attr($_GET['khong_chua_so_8']) : '';
	$khong_chua_so_9 = isset($_GET['khong_chua_so_9']) ? esc_attr($_GET['khong_chua_so_9']) : '';
	$AxAAyA          = isset($_GET['AxAAyA']) ? esc_attr($_GET['AxAAyA']) : '';
	$AxBAyB          = isset($_GET['AxBAyB']) ? esc_attr($_GET['AxBAyB']) : '';
	$AxAyAz          = isset($_GET['AxAyAz']) ? esc_attr($_GET['AxAyAz']) : '';
	$AxBxCx          = isset($_GET['AxBxCx']) ? esc_attr($_GET['AxBxCx']) : '';
	$ABxABy          = isset($_GET['ABxABy']) ? esc_attr($_GET['ABxABy']) : '';
	$xAByAB          = isset($_GET['xAByAB']) ? esc_attr($_GET['xAByAB']) : '';
	$AxAByB          = isset($_GET['AxAByB']) ? esc_attr($_GET['AxAByB']) : '';
	$AxABxB          = isset($_GET['AxABxB']) ? esc_attr($_GET['AxABxB']) : '';
	$AAxBBy          = isset($_GET['AAxBBy']) ? esc_attr($_GET['AAxBBy']) : '';
	$xAAyBB          = isset($_GET['xAAyBB']) ? esc_attr($_GET['xAAyBB']) : '';
	$xABABy          = isset($_GET['xABABy']) ? esc_attr($_GET['xABABy']) : '';
	$ABxyAB          = isset($_GET['ABxyAB']) ? esc_attr($_GET['ABxyAB']) : '';
	$ABABAx          = isset($_GET['ABABAx']) ? esc_attr($_GET['ABABAx']) : '';
	$ABABxB          = isset($_GET['ABABxB']) ? esc_attr($_GET['ABABxB']) : '';
	$ABABxy          = isset($_GET['ABABxy']) ? esc_attr($_GET['ABABxy']) : '';
	$AxABBy          = isset($_GET['AxABBy']) ? esc_attr($_GET['AxABBy']) : '';
	$xAAByB          = isset($_GET['xAAByB']) ? esc_attr($_GET['xAAByB']) : '';
	$AxxyBy          = isset($_GET['AxxyBy']) ? esc_attr($_GET['AxxyBy']) : '';
	$ABCxABCy        = isset($_GET['ABCxABCy']) ? esc_attr($_GET['ABCxABCy']) : '';
	$meta_query      = [];

	if ($tra_sau != '' && $tra_sau == 'yes'):
		$meta_query[] = [
			'key'     => '_loai_sim',
			'value'   => '_tra_sau',
			'compare' => '=',
		];
	endif;

	if ($tra_truoc != '' && $tra_truoc == 'yes'):
		$meta_query[] = [
			'key'     => '_loai_sim',
			'value'   => '_tra_truoc',
			'compare' => '=',
		];
	endif;

	// Dạng sim
	if ($AxAAyA != '' && $AxAAyA == 'yes'):
		$meta_query[] = [
			'key'     => 'AxAAyA',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxBAyB != '' && $AxBAyB == 'yes'):
		$meta_query[] = [
			'key'     => 'AxBAyB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxAyAz != '' && $AxAyAz == 'yes'):
		$meta_query[] = [
			'key'     => 'AxAyAz',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxBxCx != '' && $AxBxCx == 'yes'):
		$meta_query[] = [
			'key'     => 'AxBxCx',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABxABy != '' && $ABxABy == 'yes'):
		$meta_query[] = [
			'key'     => 'ABxABy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;


	if ($xAByAB != '' && $xAByAB == 'yes'):
		$meta_query[] = [
			'key'     => 'xAByAB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxAByB != '' && $AxAByB == 'yes'):
		$meta_query[] = [
			'key'     => 'AxAByB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxABxB != '' && $AxABxB == 'yes'):
		$meta_query[] = [
			'key'     => 'AxABxB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AAxBBy != '' && $AAxBBy == 'yes'):
		$meta_query[] = [
			'key'     => 'AAxBBy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($xAAyBB != '' && $xAAyBB == 'yes'):
		$meta_query[] = [
			'key'     => 'xAAyBB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($xABABy != '' && $xABABy == 'yes'):
		$meta_query[] = [
			'key'     => 'xABABy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABxyAB != '' && $ABxyAB == 'yes'):
		$meta_query[] = [
			'key'     => 'ABxyAB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABABAx != '' && $ABABAx == 'yes'):
		$meta_query[] = [
			'key'     => 'ABABAx',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABABxB != '' && $ABABxB == 'yes'):
		$meta_query[] = [
			'key'     => 'ABABxB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABABxy != '' && $ABABxy == 'yes'):
		$meta_query[] = [
			'key'     => 'ABABxy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxABBy != '' && $AxABBy == 'yes'):
		$meta_query[] = [
			'key'     => 'AxABBy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($xAAByB != '' && $xAAByB == 'yes'):
		$meta_query[] = [
			'key'     => 'xAAByB',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($AxxyBy != '' && $AxxyBy == 'yes'):
		$meta_query[] = [
			'key'     => 'AxxyBy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($ABCxABCy != '' && $ABCxABCy == 'yes'):
		$meta_query[] = [
			'key'     => 'ABCxABCy',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	// Không bao gồm số
	if ($khong_chua_so_0 != '' && $khong_chua_so_0 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_0',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_1 != '' && $khong_chua_so_1 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_1',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_2 != '' && $khong_chua_so_2 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_2',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_3 != '' && $khong_chua_so_3 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_3',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_4 != '' && $khong_chua_so_4 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_4',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_5 != '' && $khong_chua_so_5 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_5',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_6 != '' && $khong_chua_so_6 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_6',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_7 != '' && $khong_chua_so_7 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_7',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_8 != '' && $khong_chua_so_8 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_8',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	if ($khong_chua_so_9 != '' && $khong_chua_so_9 == 'yes'):
		$meta_query[] = [
			'key'     => '_khong_chua_so_9',
			'value'   => 'yes',
			'compare' => '=',
		];
	endif;

	// Tổng nút
	if ($tong_nut != '' && $tong_nut != - 1):
		$meta_query[] = [
			'key'     => '_tong_nut',
			'value'   => $tong_nut,
			'compare' => '=',
		];
	endif;

	// Phân loại
	if ($phan_loai != ''):
		if ($phan_loai == '_sim99k'):
			$meta_query[] = [
				'key'     => '_price',
				'value'   => 99000,
				'type'    => 'numeric',
				'compare' => '=',
			];
		else:
			$meta_query[] = [
				'key'     => $phan_loai,
				'value'   => 'yes',
				'compare' => '=',
			];
		endif;
	endif;

	// Loại sim
	if ($loai_sim != ''):
		$meta_query[] = [
			'key'     => '_loai_sim',
			'value'   => $loai_sim,
			'compare' => '=',
		];
	endif;

	// Nhà mạng
	if ($nha_mang != ''):
		$meta_query[] = [
			'key'     => '_nha_mang',
			'value'   => $nha_mang,
			'compare' => '=',
		];
	endif;

	// Đầu số
	if ($dau_so != ''):
		if (strlen($dau_so) == 2):
			$meta_query[] = [
				'key'     => '_phone_number',
				'value'   => '^' . $dau_so,
				'compare' => 'REGEXP',
			];
		else:
			$meta_query[] = [
				'key'     => '_dau_so',
				'value'   => $dau_so,
				'compare' => '=',
			];
		endif;
	endif;

	// Khoảng giá
	if ($gia == "99"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => 99000,
			'type'    => 'numeric',
			'compare' => '=',
		];
	elseif ($gia == "199"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => 199000,
			'type'    => 'numeric',
			'compare' => '=',
		];
	elseif ($gia == "299"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => 299000,
			'type'    => 'numeric',
			'compare' => '=',
		];
	elseif ($gia == "less-1"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => 1000000,
			'type'    => 'numeric',
			'compare' => '<',
		];
	elseif ($gia == "1-3"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => [1000000, 3000000],
			'type'    => 'numeric',
			'compare' => 'BETWEEN',
		];
	elseif ($gia == "3-5"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => [3000000, 5000000],
			'type'    => 'numeric',
			'compare' => 'BETWEEN',
		];
	elseif ($gia == "more-5"):
		$meta_query[] = [
			'key'     => '_price',
			'value'   => 5000000,
			'type'    => 'numeric',
			'compare' => '>',
		];
	endif;

	// Tìm kiếm theo điều kiện
	$regex_pattern  = '';
	$keyword        = $s;
	$count_asterisk = substr_count($keyword, '*');
	$asterisk_pos   = strpos($keyword, '*');

	if ($count_asterisk == 0):
		$regex_pattern = str_replace('*', '', $keyword);
	elseif ($count_asterisk == 1):
		$characters_before = substr($keyword, 0, $asterisk_pos);
		$characters_after  = substr($keyword, $asterisk_pos + 1);

		if ($characters_before == '' && $characters_after != ''):
			$regex_pattern = '.*' . $characters_after . '$';
		elseif ($characters_before != '' && $characters_after == ''):
			$regex_pattern = '^' . $characters_before . '.*';
		elseif ($characters_before != '' && $characters_after != ''):
			$regex_pattern = '^' . $characters_before . '.*' . $characters_after . '$';
		else:
			$regex_pattern = str_replace('*', '', $keyword);
		endif;
	elseif ($count_asterisk == 2):
		if (preg_match('/\*(.*?)\*/', $keyword, $matches)):
			$regex_pattern = str_replace('*', '', $matches[0]);
		else:
			$regex_pattern = str_replace('*', '', $keyword);
		endif;
	else:
		$regex_pattern = str_replace('*', '', $keyword);
	endif;

	if ($regex_pattern != ''):
		$meta_query[] = [
			'key'     => '_phone_number',
			'value'   => $regex_pattern,
			'compare' => 'REGEXP',
		];
	endif;

	// Cam kết
	if ($cam_ket != ''):
		$meta_query[] = [
			'key'     => '_goi_cuoc',
			'value'   => $cam_ket,
			'compare' => '=',
		];
	endif;

	$meta_query[] = [
		'key'     => '_type',
		'value'   => 'sim',
		'compare' => '=',
	];

	// Sim năm sinh
	if ($nam != ''):
		$meta_query[] = [
			'key'     => '_phone_number',
			'value'   => '(' . $nam . ')$',
			'compare' => 'REGEXP',
		];
	endif;

	$meta_query['relation'] = 'AND';

	$query->set('s', '');
	$query->set('orderby', 'meta_value_num');
	$query->set('meta_key', '_price');
	$query->set('order', 'ASC');
	$query->set('post_status', 'publish');
	$query->set('meta_query', $meta_query);
}

if (isset($_GET['s']) && isset($_GET['post_type']) && $_GET['post_type'] == 'product' && isset($_GET['action']) && $_GET['action'] == 'advanced_search'):
	add_action('woocommerce_product_query', '_n_product_custom_query');
endif;

/**
 * Product filter
 */
function _n_product_sim_nam_sim($query){
	$thang      = isset($_GET['thang']) ? esc_attr($_GET['thang']) : '';
	$nam        = isset($_GET['nam']) ? esc_attr($_GET['nam']) : '';
	$thang2     = '';
	$meta_query = [];

	if ($thang < 10):
		$thang2 = substr($thang, - 1);
	endif;

	$nam2  = substr($nam, - 2);
	$case1 = $thang . $nam;
	$case2 = $thang . $nam2;

	$meta_query[] = [
		'key'     => '_phone_number',
		'value'   => $case1,
		'compare' => 'LIKE',
	];

	$meta_query[] = [
		'key'     => '_phone_number',
		'value'   => $case2,
		'compare' => 'LIKE',
	];

	if ($thang <= 10):
		$case3        = $thang2 . $nam;
		$meta_query[] = [
			'key'     => '_phone_number',
			'value'   => $case3,
			'compare' => 'LIKE',
		];
	endif;

	$meta_query['relation'] = 'AND';

	$query->set('s', '');
	$query->set('orderby', 'meta_value_num');
	$query->set('meta_key', '_price');
	$query->set('order', 'ASC');
	$query->set('post_status', 'publish');
	$query->set('meta_query', $meta_query);
}

if (isset($_GET['s']) && isset($_GET['post_type']) && $_GET['post_type'] == 'product' && isset($_GET['action']) && $_GET['action'] == 'sim_nam_sim'):
	add_action('woocommerce_product_query', '_n_product_sim_nam_sim');
endif;

/**
 * Archive sim
 */
function _n_archive_sim($query){
	$phan_loai = isset($_GET['phan_loai']) ? esc_attr($_GET['phan_loai']) : '';

	if ($phan_loai != ''):
		if ($phan_loai != 'sim_super_data'):
			$meta_query[] = [
				'key'     => '_type',
				'value'   => 'sim',
				'compare' => '=',
			];
			$meta_query[] = [
				'key'     => $phan_loai,
				'value'   => 'yes',
				'compare' => '=',
			];
		else:
			$meta_query[] = [
				'key'     => '_type',
				'value'   => 'sim_super_data',
				'compare' => '=',
			];
		endif;
	endif;

	$meta_query['relation'] = 'AND';

	$query->set('s', '');
	$query->set('orderby', 'meta_value_num');
	$query->set('meta_key', '_price');
	$query->set('order', 'ASC');
	$query->set('post_status', 'publish');
	$query->set('meta_query', $meta_query);
}

if (isset($_GET['s']) && isset($_GET['post_type']) && $_GET['post_type'] == 'product' && isset($_GET['action']) && $_GET['action'] == 'archive'):
	add_action('woocommerce_product_query', '_n_archive_sim');
endif;
